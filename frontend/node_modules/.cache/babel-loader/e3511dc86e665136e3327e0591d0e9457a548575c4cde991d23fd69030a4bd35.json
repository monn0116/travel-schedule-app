{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koenn\\\\travel-schedule-app\\\\frontend\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Paper, Typography, IconButton, useTheme, useMediaQuery } from '@mui/material';\nimport { DateCalendar, LocalizationProvider, PickersDay } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { ja } from 'date-fns/locale';\nimport { format } from 'date-fns';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  scheduleData,\n  onDateSelect\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // 日付にイベントがあるかチェック\n  const hasEvent = date => {\n    return scheduleData.some(event => format(new Date(event.date), 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd'));\n  };\n\n  // カスタムデイコンポーネント\n  const renderDay = (day, selectedDays, pickersDayProps) => {\n    const isSelected = hasEvent(day);\n    return /*#__PURE__*/_jsxDEV(PickersDay, {\n      ...pickersDayProps,\n      selected: isSelected,\n      sx: {\n        ...(isSelected && {\n          backgroundColor: theme.palette.primary.main,\n          color: theme.palette.primary.contrastText,\n          '&:hover': {\n            backgroundColor: theme.palette.primary.dark\n          }\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    sx: {\n      p: 2,\n      borderRadius: 2,\n      bgcolor: 'background.paper'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          flexGrow: 1\n        },\n        children: format(selectedDate, 'yyyy年 MMMM', {\n          locale: ja\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        onClick: () => {\n          const newDate = new Date(selectedDate);\n          newDate.setMonth(newDate.getMonth() - 1);\n          setSelectedDate(newDate);\n        },\n        children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        onClick: () => {\n          const newDate = new Date(selectedDate);\n          newDate.setMonth(newDate.getMonth() + 1);\n          setSelectedDate(newDate);\n        },\n        children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateCalendar, {\n      value: selectedDate,\n      onChange: newDate => {\n        setSelectedDate(newDate);\n        onDateSelect(newDate);\n      },\n      renderDay: renderDay,\n      sx: {\n        width: '100%',\n        '& .MuiPickersCalendarHeader-root': {\n          display: 'none'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"/HBBUhp5fdZskmpoVWrhljsl6aQ=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","Box","Paper","Typography","IconButton","useTheme","useMediaQuery","DateCalendar","LocalizationProvider","PickersDay","AdapterDateFns","ja","format","ChevronLeftIcon","ChevronRightIcon","jsxDEV","_jsxDEV","Calendar","scheduleData","onDateSelect","_s","selectedDate","setSelectedDate","Date","theme","isMobile","breakpoints","down","hasEvent","date","some","event","renderDay","day","selectedDays","pickersDayProps","isSelected","selected","sx","backgroundColor","palette","primary","main","color","contrastText","dark","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","borderRadius","bgcolor","children","display","alignItems","mb","variant","flexGrow","locale","size","onClick","newDate","setMonth","getMonth","value","onChange","width","_c","$RefreshReg$"],"sources":["C:/Users/koenn/travel-schedule-app/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Paper, \r\n  Typography,\r\n  IconButton,\r\n  useTheme,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { \r\n  DateCalendar,\r\n  LocalizationProvider,\r\n  PickersDay\r\n} from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { ja } from 'date-fns/locale';\r\nimport { format } from 'date-fns';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\nconst Calendar = ({ scheduleData, onDateSelect }) => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // 日付にイベントがあるかチェック\r\n  const hasEvent = (date) => {\r\n    return scheduleData.some(event => \r\n      format(new Date(event.date), 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd')\r\n    );\r\n  };\r\n\r\n  // カスタムデイコンポーネント\r\n  const renderDay = (day, selectedDays, pickersDayProps) => {\r\n    const isSelected = hasEvent(day);\r\n    \r\n    return (\r\n      <PickersDay\r\n        {...pickersDayProps}\r\n        selected={isSelected}\r\n        sx={{\r\n          ...(isSelected && {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: theme.palette.primary.contrastText,\r\n            '&:hover': {\r\n              backgroundColor: theme.palette.primary.dark,\r\n            },\r\n          }),\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper \r\n      elevation={0}\r\n      sx={{ \r\n        p: 2,\r\n        borderRadius: 2,\r\n        bgcolor: 'background.paper'\r\n      }}\r\n    >\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n          {format(selectedDate, 'yyyy年 MMMM', { locale: ja })}\r\n        </Typography>\r\n        <IconButton \r\n          size=\"small\"\r\n          onClick={() => {\r\n            const newDate = new Date(selectedDate);\r\n            newDate.setMonth(newDate.getMonth() - 1);\r\n            setSelectedDate(newDate);\r\n          }}\r\n        >\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n        <IconButton \r\n          size=\"small\"\r\n          onClick={() => {\r\n            const newDate = new Date(selectedDate);\r\n            newDate.setMonth(newDate.getMonth() + 1);\r\n            setSelectedDate(newDate);\r\n          }}\r\n        >\r\n          <ChevronRightIcon />\r\n        </IconButton>\r\n      </Box>\r\n      \r\n      <DateCalendar\r\n        value={selectedDate}\r\n        onChange={(newDate) => {\r\n          setSelectedDate(newDate);\r\n          onDateSelect(newDate);\r\n        }}\r\n        renderDay={renderDay}\r\n        sx={{\r\n          width: '100%',\r\n          '& .MuiPickersCalendarHeader-root': {\r\n            display: 'none',\r\n          },\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Calendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}